/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated modules for account 0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867 */

import { TypeDescriptor, ANY_TYPE } from "@typemove/move";
import { MoveCoder, TypedEventInstance } from "@typemove/sui";

import { defaultMoveCoder } from "@sentio/sdk/sui";

import { CallFilter, MoveFetchConfig } from "@sentio/sdk/move";
import {
  SuiBindOptions,
  SuiBaseProcessor,
  SuiNetwork,
  TypedFunctionPayload,
  SuiContext,
} from "@sentio/sdk/sui";

import { _0x2 } from "@typemove/sui/builtin";
import * as _0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a from "./0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a.js";
import * as _0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d from "./0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d.js";
import * as _0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb from "./0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb.js";
import * as _0xdee9 from "./0xdee9.js";

export class cross extends SuiBaseProcessor {
  constructor(options: SuiBindOptions) {
    super("cross", options);
  }
  static DEFAULT_OPTIONS: SuiBindOptions = {
    address:
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867",
    network: SuiNetwork.MAIN_NET,
  };

  static bind(options: Partial<SuiBindOptions> = {}): cross {
    return new cross({ ...cross.DEFAULT_OPTIONS, ...options });
  }

  onEventNormalizedSoData(
    func: (event: cross.NormalizedSoDataInstance, ctx: SuiContext) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): cross {
    this.onMoveEvent(func, { type: "cross::NormalizedSoData" }, fetchConfig);
    return this;
  }

  onEventNormalizedSwapData(
    func: (event: cross.NormalizedSwapDataInstance, ctx: SuiContext) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): cross {
    this.onMoveEvent(func, { type: "cross::NormalizedSwapData" }, fetchConfig);
    return this;
  }
}

export namespace cross {
  export interface NormalizedSoData {
    transaction_id: number[];
    receiver: number[];
    source_chain_id: number;
    sending_asset_id: number[];
    destination_chain_id: number;
    receiving_asset_id: number[];
    amount: bigint;
  }

  export namespace NormalizedSoData {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::cross::NormalizedSoData";

    const TYPE = new TypeDescriptor<NormalizedSoData>(
      NormalizedSoData.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<NormalizedSoData> {
      return TYPE.apply();
    }
  }

  export interface NormalizedSoDataInstance
    extends TypedEventInstance<NormalizedSoData> {
    data_decoded: NormalizedSoData;
    type_arguments: [];
  }

  export interface NormalizedSwapData {
    call_to: number[];
    approve_to: number[];
    sending_asset_id: number[];
    receiving_asset_id: number[];
    from_amount: bigint;
    call_data: number[];
  }

  export namespace NormalizedSwapData {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::cross::NormalizedSwapData";

    const TYPE = new TypeDescriptor<NormalizedSwapData>(
      NormalizedSwapData.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<NormalizedSwapData> {
      return TYPE.apply();
    }
  }

  export interface NormalizedSwapDataInstance
    extends TypedEventInstance<NormalizedSwapData> {
    data_decoded: NormalizedSwapData;
    type_arguments: [];
  }
}

export namespace serde {}

export class so_fee_wormhole extends SuiBaseProcessor {
  constructor(options: SuiBindOptions) {
    super("so_fee_wormhole", options);
  }
  static DEFAULT_OPTIONS: SuiBindOptions = {
    address:
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867",
    network: SuiNetwork.MAIN_NET,
  };

  static bind(options: Partial<SuiBindOptions> = {}): so_fee_wormhole {
    return new so_fee_wormhole({
      ...so_fee_wormhole.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntrySetPriceRatio(
    func: (call: so_fee_wormhole.SetPriceRatioPayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): so_fee_wormhole {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "so_fee_wormhole::set_price_ratio",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryTransferOwner(
    func: (call: so_fee_wormhole.TransferOwnerPayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): so_fee_wormhole {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "so_fee_wormhole::transfer_owner",
      },
      fetchConfig,
    );
    return this;
  }
}

export namespace so_fee_wormhole {
  export interface PriceData {
    current_price_ratio: bigint;
    last_update_timestamp: bigint;
  }

  export namespace PriceData {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::so_fee_wormhole::PriceData";

    const TYPE = new TypeDescriptor<PriceData>(PriceData.TYPE_QNAME);

    export function type(): TypeDescriptor<PriceData> {
      return TYPE.apply();
    }
  }

  export interface PriceManager {
    id: _0x2.object_.UID;
    price_data: _0x2.table.Table<number, so_fee_wormhole.PriceData>;
    owner: string;
  }

  export namespace PriceManager {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::so_fee_wormhole::PriceManager";

    const TYPE = new TypeDescriptor<PriceManager>(PriceManager.TYPE_QNAME);

    export function type(): TypeDescriptor<PriceManager> {
      return TYPE.apply();
    }
  }

  export interface SetPriceRatioPayload
    extends TypedFunctionPayload<[string, string, number, bigint, string]> {
    arguments_decoded: [string, string, number, bigint, string];
    type_arguments: [];
  }

  export interface TransferOwnerPayload
    extends TypedFunctionPayload<[string, string, string]> {
    arguments_decoded: [string, string, string];
    type_arguments: [];
  }
}

export namespace swap {}

export class wormhole_facet extends SuiBaseProcessor {
  constructor(options: SuiBindOptions) {
    super("wormhole_facet", options);
  }
  static DEFAULT_OPTIONS: SuiBindOptions = {
    address:
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867",
    network: SuiNetwork.MAIN_NET,
  };

  static bind(options: Partial<SuiBindOptions> = {}): wormhole_facet {
    return new wormhole_facet({
      ...wormhole_facet.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryCompleteSoSwapByAdmin(
    func: (
      call: wormhole_facet.CompleteSoSwapByAdminPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_by_admin",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryCompleteSoSwapByRelayer(
    func: (
      call: wormhole_facet.CompleteSoSwapByRelayerPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_by_relayer",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryCompleteSoSwapForCetusBaseAsset(
    func: (
      call: wormhole_facet.CompleteSoSwapForCetusBaseAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_for_cetus_base_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryCompleteSoSwapForCetusQuoteAsset(
    func: (
      call: wormhole_facet.CompleteSoSwapForCetusQuoteAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_for_cetus_quote_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryCompleteSoSwapForDeepbookBaseAsset(
    func: (
      call: wormhole_facet.CompleteSoSwapForDeepbookBaseAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_for_deepbook_base_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryCompleteSoSwapForDeepbookQuoteAsset(
    func: (
      call: wormhole_facet.CompleteSoSwapForDeepbookQuoteAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_for_deepbook_quote_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryCompleteSoSwapWithoutSwap(
    func: (
      call: wormhole_facet.CompleteSoSwapWithoutSwapPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::complete_so_swap_without_swap",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryInitWormhole(
    func: (call: wormhole_facet.InitWormholePayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::init_wormhole",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySetRelayer(
    func: (call: wormhole_facet.SetRelayerPayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::set_relayer",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySetSoFees(
    func: (call: wormhole_facet.SetSoFeesPayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::set_so_fees",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySetWormholeGas(
    func: (call: wormhole_facet.SetWormholeGasPayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::set_wormhole_gas",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySetWormholeReserve(
    func: (
      call: wormhole_facet.SetWormholeReservePayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::set_wormhole_reserve",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySoSwapForCetusBaseAsset(
    func: (
      call: wormhole_facet.SoSwapForCetusBaseAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::so_swap_for_cetus_base_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySoSwapForCetusQuoteAsset(
    func: (
      call: wormhole_facet.SoSwapForCetusQuoteAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::so_swap_for_cetus_quote_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySoSwapForDeepbookBaseAsset(
    func: (
      call: wormhole_facet.SoSwapForDeepbookBaseAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::so_swap_for_deepbook_base_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySoSwapForDeepbookQuoteAsset(
    func: (
      call: wormhole_facet.SoSwapForDeepbookQuoteAssetPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::so_swap_for_deepbook_quote_asset",
      },
      fetchConfig,
    );
    return this;
  }

  onEntrySoSwapWithoutSwap(
    func: (
      call: wormhole_facet.SoSwapWithoutSwapPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::so_swap_without_swap",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryTransferBeneficiary(
    func: (
      call: wormhole_facet.TransferBeneficiaryPayload,
      ctx: SuiContext,
    ) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::transfer_beneficiary",
      },
      fetchConfig,
    );
    return this;
  }

  onEntryTransferOwner(
    func: (call: wormhole_facet.TransferOwnerPayload, ctx: SuiContext) => void,
    filter?: CallFilter,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onEntryFunctionCall(
      func,
      {
        ...filter,
        function: "wormhole_facet::transfer_owner",
      },
      fetchConfig,
    );
    return this;
  }

  onEventDstAmount(
    func: (event: wormhole_facet.DstAmountInstance, ctx: SuiContext) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onMoveEvent(func, { type: "wormhole_facet::DstAmount" }, fetchConfig);
    return this;
  }

  onEventNormalizedWormholeData(
    func: (
      event: wormhole_facet.NormalizedWormholeDataInstance,
      ctx: SuiContext,
    ) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onMoveEvent(
      func,
      { type: "wormhole_facet::NormalizedWormholeData" },
      fetchConfig,
    );
    return this;
  }

  onEventSoTransferCompleted(
    func: (
      event: wormhole_facet.SoTransferCompletedInstance,
      ctx: SuiContext,
    ) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onMoveEvent(
      func,
      { type: "wormhole_facet::SoTransferCompleted" },
      fetchConfig,
    );
    return this;
  }

  onEventSoTransferStarted(
    func: (
      event: wormhole_facet.SoTransferStartedInstance,
      ctx: SuiContext,
    ) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onMoveEvent(
      func,
      { type: "wormhole_facet::SoTransferStarted" },
      fetchConfig,
    );
    return this;
  }

  onEventSrcAmount(
    func: (event: wormhole_facet.SrcAmountInstance, ctx: SuiContext) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onMoveEvent(func, { type: "wormhole_facet::SrcAmount" }, fetchConfig);
    return this;
  }

  onEventTransferFromWormholeEvent(
    func: (
      event: wormhole_facet.TransferFromWormholeEventInstance,
      ctx: SuiContext,
    ) => void,
    fetchConfig?: Partial<MoveFetchConfig>,
  ): wormhole_facet {
    this.onMoveEvent(
      func,
      { type: "wormhole_facet::TransferFromWormholeEvent" },
      fetchConfig,
    );
    return this;
  }
}

export namespace wormhole_facet {
  export interface DstAmount {
    so_fee: bigint;
  }

  export namespace DstAmount {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::DstAmount";

    const TYPE = new TypeDescriptor<DstAmount>(DstAmount.TYPE_QNAME);

    export function type(): TypeDescriptor<DstAmount> {
      return TYPE.apply();
    }
  }

  export interface DstAmountInstance extends TypedEventInstance<DstAmount> {
    data_decoded: DstAmount;
    type_arguments: [];
  }

  export interface NormalizedWormholeData {
    dst_wormhole_chain_id: number;
    dst_max_gas_price_in_wei_for_relayer: bigint;
    wormhole_fee: bigint;
    dst_so_diamond: number[];
  }

  export namespace NormalizedWormholeData {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::NormalizedWormholeData";

    const TYPE = new TypeDescriptor<NormalizedWormholeData>(
      NormalizedWormholeData.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<NormalizedWormholeData> {
      return TYPE.apply();
    }
  }

  export interface NormalizedWormholeDataInstance
    extends TypedEventInstance<NormalizedWormholeData> {
    data_decoded: NormalizedWormholeData;
    type_arguments: [];
  }

  export interface SoTransferCompleted {
    transaction_id: number[];
    actual_receiving_amount: bigint;
  }

  export namespace SoTransferCompleted {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::SoTransferCompleted";

    const TYPE = new TypeDescriptor<SoTransferCompleted>(
      SoTransferCompleted.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<SoTransferCompleted> {
      return TYPE.apply();
    }
  }

  export interface SoTransferCompletedInstance
    extends TypedEventInstance<SoTransferCompleted> {
    data_decoded: SoTransferCompleted;
    type_arguments: [];
  }

  export interface SoTransferStarted {
    transaction_id: number[];
  }

  export namespace SoTransferStarted {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::SoTransferStarted";

    const TYPE = new TypeDescriptor<SoTransferStarted>(
      SoTransferStarted.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<SoTransferStarted> {
      return TYPE.apply();
    }
  }

  export interface SoTransferStartedInstance
    extends TypedEventInstance<SoTransferStarted> {
    data_decoded: SoTransferStarted;
    type_arguments: [];
  }

  export interface SrcAmount {
    relayer_fee: bigint;
    cross_amount: bigint;
  }

  export namespace SrcAmount {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::SrcAmount";

    const TYPE = new TypeDescriptor<SrcAmount>(SrcAmount.TYPE_QNAME);

    export function type(): TypeDescriptor<SrcAmount> {
      return TYPE.apply();
    }
  }

  export interface SrcAmountInstance extends TypedEventInstance<SrcAmount> {
    data_decoded: SrcAmount;
    type_arguments: [];
  }

  export interface Storage {
    id: _0x2.object_.UID;
    emitter_cap: _0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a.emitter.EmitterCap;
    src_wormhole_chain_id: number;
    actual_reserve: bigint;
    estimate_reserve: bigint;
    dst_base_gas: _0x2.table.Table<number, bigint>;
    dst_gas_per_bytes: _0x2.table.Table<number, bigint>;
  }

  export namespace Storage {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::Storage";

    const TYPE = new TypeDescriptor<Storage>(Storage.TYPE_QNAME);

    export function type(): TypeDescriptor<Storage> {
      return TYPE.apply();
    }
  }

  export interface TransferFromWormholeEvent {
    src_wormhole_chain_id: number;
    dst_wormhole_chain_id: number;
    sequence: bigint;
  }

  export namespace TransferFromWormholeEvent {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::TransferFromWormholeEvent";

    const TYPE = new TypeDescriptor<TransferFromWormholeEvent>(
      TransferFromWormholeEvent.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<TransferFromWormholeEvent> {
      return TYPE.apply();
    }
  }

  export interface TransferFromWormholeEventInstance
    extends TypedEventInstance<TransferFromWormholeEvent> {
    data_decoded: TransferFromWormholeEvent;
    type_arguments: [];
  }

  export interface WormholeFacetManager {
    id: _0x2.object_.UID;
    owner: string;
    relayer: string;
  }

  export namespace WormholeFacetManager {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::WormholeFacetManager";

    const TYPE = new TypeDescriptor<WormholeFacetManager>(
      WormholeFacetManager.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<WormholeFacetManager> {
      return TYPE.apply();
    }
  }

  export interface WormholeFee {
    id: _0x2.object_.UID;
    fee: bigint;
    beneficiary: string;
  }

  export namespace WormholeFee {
    export const TYPE_QNAME =
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867::wormhole_facet::WormholeFee";

    const TYPE = new TypeDescriptor<WormholeFee>(WormholeFee.TYPE_QNAME);

    export function type(): TypeDescriptor<WormholeFee> {
      return TYPE.apply();
    }
  }

  export interface CompleteSoSwapByAdminPayload<T0 = any>
    extends TypedFunctionPayload<
      [string, string, string, string, string, number[], string, string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
      string,
    ];
    type_arguments: [string];
  }

  export interface CompleteSoSwapByRelayerPayload<T0 = any>
    extends TypedFunctionPayload<
      [string, string, string, string, string, number[], string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
    ];
    type_arguments: [string];
  }

  export interface CompleteSoSwapForCetusBaseAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [string, string, string, string, string, string, number[], string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
    ];
    type_arguments: [string, string];
  }

  export interface CompleteSoSwapForCetusQuoteAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [string, string, string, string, string, string, number[], string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
    ];
    type_arguments: [string, string];
  }

  export interface CompleteSoSwapForDeepbookBaseAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [string, string, string, string, string, number[], string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
    ];
    type_arguments: [string, string];
  }

  export interface CompleteSoSwapForDeepbookQuoteAssetPayload<
    T0 = any,
    T1 = any,
  > extends TypedFunctionPayload<
      [string, string, string, string, string, number[], string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
    ];
    type_arguments: [string, string];
  }

  export interface CompleteSoSwapWithoutSwapPayload<T0 = any>
    extends TypedFunctionPayload<
      [string, string, string, string, number[], string, string]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      number[],
      string,
      string,
    ];
    type_arguments: [string];
  }

  export interface InitWormholePayload
    extends TypedFunctionPayload<[string, string, number, string]> {
    arguments_decoded: [string, string, number, string];
    type_arguments: [];
  }

  export interface SetRelayerPayload
    extends TypedFunctionPayload<[string, string, string]> {
    arguments_decoded: [string, string, string];
    type_arguments: [];
  }

  export interface SetSoFeesPayload
    extends TypedFunctionPayload<[string, bigint, string]> {
    arguments_decoded: [string, bigint, string];
    type_arguments: [];
  }

  export interface SetWormholeGasPayload
    extends TypedFunctionPayload<
      [string, string, number, bigint, bigint, string]
    > {
    arguments_decoded: [string, string, number, bigint, bigint, string];
    type_arguments: [];
  }

  export interface SetWormholeReservePayload
    extends TypedFunctionPayload<[string, string, bigint, bigint, string]> {
    arguments_decoded: [string, string, bigint, bigint, string];
    type_arguments: [];
  }

  export interface SoSwapForCetusBaseAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        number[],
        number[],
        number[],
        number[],
        _0x2.coin.Coin<T1>[],
        _0x2.coin.Coin<_0x2.sui.SUI>[],
        string,
      ]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      number[],
      number[],
      number[],
      _0x2.coin.Coin<T1>[],
      _0x2.coin.Coin<_0x2.sui.SUI>[],
      string,
    ];
    type_arguments: [string, string];
  }

  export interface SoSwapForCetusQuoteAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        number[],
        number[],
        number[],
        number[],
        _0x2.coin.Coin<T0>[],
        _0x2.coin.Coin<_0x2.sui.SUI>[],
        string,
      ]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      number[],
      number[],
      number[],
      _0x2.coin.Coin<T0>[],
      _0x2.coin.Coin<_0x2.sui.SUI>[],
      string,
    ];
    type_arguments: [string, string];
  }

  export interface SoSwapForDeepbookBaseAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        number[],
        number[],
        number[],
        number[],
        _0x2.coin.Coin<T1>[],
        _0x2.coin.Coin<_0x2.sui.SUI>[],
        string,
      ]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      number[],
      number[],
      number[],
      _0x2.coin.Coin<T1>[],
      _0x2.coin.Coin<_0x2.sui.SUI>[],
      string,
    ];
    type_arguments: [string, string];
  }

  export interface SoSwapForDeepbookQuoteAssetPayload<T0 = any, T1 = any>
    extends TypedFunctionPayload<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        number[],
        number[],
        number[],
        number[],
        _0x2.coin.Coin<T0>[],
        _0x2.coin.Coin<_0x2.sui.SUI>[],
        string,
      ]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      number[],
      number[],
      number[],
      _0x2.coin.Coin<T0>[],
      _0x2.coin.Coin<_0x2.sui.SUI>[],
      string,
    ];
    type_arguments: [string, string];
  }

  export interface SoSwapWithoutSwapPayload<T0 = any>
    extends TypedFunctionPayload<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        number[],
        number[],
        number[],
        number[],
        _0x2.coin.Coin<T0>[],
        _0x2.coin.Coin<_0x2.sui.SUI>[],
        string,
      ]
    > {
    arguments_decoded: [
      string,
      string,
      string,
      string,
      string,
      string,
      number[],
      number[],
      number[],
      number[],
      _0x2.coin.Coin<T0>[],
      _0x2.coin.Coin<_0x2.sui.SUI>[],
      string,
    ];
    type_arguments: [string];
  }

  export interface TransferBeneficiaryPayload
    extends TypedFunctionPayload<[string, string, string]> {
    arguments_decoded: [string, string, string];
    type_arguments: [];
  }

  export interface TransferOwnerPayload
    extends TypedFunctionPayload<[string, string, string]> {
    arguments_decoded: [string, string, string];
    type_arguments: [];
  }
}

const MODULES = JSON.parse(
  '{"cross":{"fileFormatVersion":6,"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","name":"cross","friends":[],"structs":{"NormalizedSoData":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"transaction_id","type":{"Vector":"U8"}},{"name":"receiver","type":{"Vector":"U8"}},{"name":"source_chain_id","type":"U16"},{"name":"sending_asset_id","type":{"Vector":"U8"}},{"name":"destination_chain_id","type":"U16"},{"name":"receiving_asset_id","type":{"Vector":"U8"}},{"name":"amount","type":"U256"}]},"NormalizedSwapData":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"call_to","type":{"Vector":"U8"}},{"name":"approve_to","type":{"Vector":"U8"}},{"name":"sending_asset_id","type":{"Vector":"U8"}},{"name":"receiving_asset_id","type":{"Vector":"U8"}},{"name":"from_amount","type":"U256"},{"name":"call_data","type":{"Vector":"U8"}}]}},"exposedFunctions":{"decode_normalized_so_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}]},"decode_normalized_swap_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":[{"Vector":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}}]},"encode_normalized_so_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"encode_normalized_swap_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Vector":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}}],"return":[{"Vector":"U8"}]},"padding_so_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"}],"return":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}]},"padding_swap_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"}],"return":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}]},"so_amount":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}],"return":["U256"]},"so_receiver":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"so_receiving_asset_id":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"so_sending_asset_id":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"so_transaction_id":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"swap_call_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"swap_call_to":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"swap_from_amount":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}],"return":["U256"]},"swap_receiving_asset_id":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"swap_sending_asset_id":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}],"return":[{"Vector":"U8"}]}}},"serde":{"fileFormatVersion":6,"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","name":"serde","friends":[],"structs":{},"exposedFunctions":{"ascii_to_hex_str":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":["U8"],"return":["U8"]},"deserialize_address":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["Address"]},"deserialize_u128":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U128"]},"deserialize_u128_with_hex_str":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U128"]},"deserialize_u16":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U16"]},"deserialize_u256":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U256"]},"deserialize_u256_with_hex_str":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U256"]},"deserialize_u64":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U64"]},"deserialize_u8":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U8"]},"deserialize_vector_with_length":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":[{"Vector":"U8"}]},"get_vector_length":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U64"]},"hex_str_to_ascii":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":["U8"],"return":["U8"]},"serialize_address":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"Address"],"return":[]},"serialize_type":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]}],"parameters":[{"MutableReference":{"Vector":"U8"}}],"return":[]},"serialize_u128":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U128"],"return":[]},"serialize_u128_with_hex_str":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U128"],"return":[]},"serialize_u16":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U16"],"return":[]},"serialize_u256":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U256"],"return":[]},"serialize_u256_with_hex_str":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U256"],"return":[]},"serialize_u64":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U64"],"return":[]},"serialize_u8":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},"U8"],"return":[]},"serialize_vector":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},{"Vector":"U8"}],"return":[]},"serialize_vector_with_length":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Vector":"U8"}},{"Vector":"U8"}],"return":[]},"vector_slice":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":["Copy"]}],"parameters":[{"Reference":{"Vector":{"TypeParameter":0}}},"U64","U64"],"return":[{"Vector":{"TypeParameter":0}}]},"vector_split":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":["Copy","Drop"]}],"parameters":[{"Reference":{"Vector":{"TypeParameter":0}}},{"TypeParameter":0}],"return":[{"Vector":{"Vector":{"TypeParameter":0}}}]}}},"so_fee_wormhole":{"fileFormatVersion":6,"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","name":"so_fee_wormhole","friends":[],"structs":{"PriceData":{"abilities":{"abilities":["Drop","Store"]},"typeParameters":[],"fields":[{"name":"current_price_ratio","type":"U64"},{"name":"last_update_timestamp","type":"U64"}]},"PriceManager":{"abilities":{"abilities":["Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}},{"name":"price_data","type":{"Struct":{"address":"0x2","module":"table","name":"Table","typeArguments":["U16",{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceData","typeArguments":[]}}]}}},{"name":"owner","type":"Address"}]}},"exposedFunctions":{"get_price_ratio":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},"U16"],"return":["U64"]},"get_timestamp":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}}],"return":["U64"]},"set_price_ratio":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},"U16","U64",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"transfer_owner":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},"Address",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]}}},"swap":{"fileFormatVersion":6,"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","name":"swap","friends":[],"structs":{},"exposedFunctions":{"ascii_to_u64":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Vector":"U8"}],"return":["U64"]},"get_cetus_amount_in":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},"Bool","U64"],"return":["U64"]},"get_cetus_amount_out":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},"Bool","U64"],"return":["U64"]},"right_type":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]}],"parameters":[{"Vector":"U8"}],"return":["Bool"]},"swap_for_base_asset_by_cetus":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"config","name":"GlobalConfig","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}},"U64"]},"swap_for_base_asset_by_deepbook":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0xdee9","module":"clob","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}},"U64"]},"swap_for_quote_asset_by_cetus":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"config","name":"GlobalConfig","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}},"U64"]},"swap_for_quote_asset_by_deepbook":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0xdee9","module":"clob","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}},"U64"]}}},"wormhole_facet":{"fileFormatVersion":6,"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","name":"wormhole_facet","friends":[],"structs":{"DstAmount":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"so_fee","type":"U64"}]},"NormalizedWormholeData":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"dst_wormhole_chain_id","type":"U16"},{"name":"dst_max_gas_price_in_wei_for_relayer","type":"U256"},{"name":"wormhole_fee","type":"U256"},{"name":"dst_so_diamond","type":{"Vector":"U8"}}]},"SoTransferCompleted":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"transaction_id","type":{"Vector":"U8"}},{"name":"actual_receiving_amount","type":"U64"}]},"SoTransferStarted":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"transaction_id","type":{"Vector":"U8"}}]},"SrcAmount":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"relayer_fee","type":"U64"},{"name":"cross_amount","type":"U64"}]},"Storage":{"abilities":{"abilities":["Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}},{"name":"emitter_cap","type":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"emitter","name":"EmitterCap","typeArguments":[]}}},{"name":"src_wormhole_chain_id","type":"U16"},{"name":"actual_reserve","type":"U64"},{"name":"estimate_reserve","type":"U64"},{"name":"dst_base_gas","type":{"Struct":{"address":"0x2","module":"table","name":"Table","typeArguments":["U16","U256"]}}},{"name":"dst_gas_per_bytes","type":{"Struct":{"address":"0x2","module":"table","name":"Table","typeArguments":["U16","U256"]}}}]},"TransferFromWormholeEvent":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"src_wormhole_chain_id","type":"U16"},{"name":"dst_wormhole_chain_id","type":"U16"},{"name":"sequence","type":"U64"}]},"WormholeFacetManager":{"abilities":{"abilities":["Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}},{"name":"owner","type":"Address"},{"name":"relayer","type":"Address"}]},"WormholeFee":{"abilities":{"abilities":["Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}},{"name":"fee","type":"U64"},{"name":"beneficiary","type":"Address"}]}},"exposedFunctions":{"check_relayer_fee":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"NormalizedWormholeData","typeArguments":[]}},{"Vector":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}}],"return":["Bool","U64","U64","U256"]},"complete_so_swap_by_admin":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Vector":"U8"},"Address",{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"complete_so_swap_by_relayer":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Vector":"U8"},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"complete_so_swap_for_cetus_base_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"config","name":"GlobalConfig","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"complete_so_swap_for_cetus_quote_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"config","name":"GlobalConfig","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"complete_so_swap_for_deepbook_base_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0xdee9","module":"clob","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"complete_so_swap_for_deepbook_quote_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0xdee9","module":"clob","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"complete_so_swap_without_swap":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Vector":"U8"},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"decode_normalized_wormhole_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"NormalizedWormholeData","typeArguments":[]}}]},"decode_wormhole_payload":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":["U256","U256",{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}},{"Vector":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}}]},"encode_normalized_wormhole_data":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"NormalizedWormholeData","typeArguments":[]}}],"return":[{"Vector":"U8"}]},"encode_wormhole_payload":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":["U256","U256",{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSoData","typeArguments":[]}},{"Vector":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"cross","name":"NormalizedSwapData","typeArguments":[]}}}],"return":[{"Vector":"U8"}]},"estimate_complete_soswap_gas":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"Vector":"U8"},{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"NormalizedWormholeData","typeArguments":[]}},{"Vector":"U8"}],"return":["U256"]},"estimate_relayer_fee":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"}],"return":["U64","U64","U256"]},"get_dst_gas":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},"U16"],"return":["U256","U256"]},"get_so_fees":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}}],"return":["U64"]},"init_wormhole":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},"U16",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"merge_coin":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]}],"parameters":[{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}}},"U64",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}}]},"process_left_coin":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":[]}],"parameters":[{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}},"Address"],"return":[]},"set_relayer":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},"Address",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"set_so_fees":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},"U64",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"set_wormhole_gas":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},"U16","U256","U256",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"set_wormhole_reserve":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},"U64","U64",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"so_swap_for_cetus_base_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"config","name":"GlobalConfig","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}}},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"Struct":{"address":"0x2","module":"sui","name":"SUI","typeArguments":[]}}]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"so_swap_for_cetus_quote_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"config","name":"GlobalConfig","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb","module":"pool","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}}},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"Struct":{"address":"0x2","module":"sui","name":"SUI","typeArguments":[]}}]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"so_swap_for_deepbook_base_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0xdee9","module":"clob","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":1}]}}},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"Struct":{"address":"0x2","module":"sui","name":"SUI","typeArguments":[]}}]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"so_swap_for_deepbook_quote_asset":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]},{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0xdee9","module":"clob","name":"Pool","typeArguments":[{"TypeParameter":0},{"TypeParameter":1}]}}},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}}},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"Struct":{"address":"0x2","module":"sui","name":"SUI","typeArguments":[]}}]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"so_swap_without_swap":{"visibility":"Public","isEntry":true,"typeParameters":[{"abilities":[]}],"parameters":[{"MutableReference":{"Struct":{"address":"0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d","module":"state","name":"State","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"Storage","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0x2","module":"clock","name":"Clock","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"so_fee_wormhole","name":"PriceManager","typeArguments":[]}}},{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":"U8"},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"TypeParameter":0}]}}},{"Vector":{"Struct":{"address":"0x2","module":"coin","name":"Coin","typeArguments":[{"Struct":{"address":"0x2","module":"sui","name":"SUI","typeArguments":[]}}]}}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"transfer_beneficiary":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFee","typeArguments":[]}}},"Address",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"transfer_owner":{"visibility":"Public","isEntry":true,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867","module":"wormhole_facet","name":"WormholeFacetManager","typeArguments":[]}}},"Address",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"vector_copy":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Vector":"U8"}}],"return":[{"Vector":"U8"}]}}}}',
);

export function loadAllTypes(coder: MoveCoder) {
  _0x2.loadAllTypes(coder);
  _0x5306f64e312b581766351c07af79c72fcb1cd25147157fdc2f8ad76de9a3fb6a.loadAllTypes(
    coder,
  );
  _0x26efee2b51c911237888e5dc6702868abca3c7ac12c53f76ef8eba0697695e3d.loadAllTypes(
    coder,
  );
  _0x1eabed72c53feb3805120a081dc15963c204dc8d091542592abaf7a35689b2fb.loadAllTypes(
    coder,
  );
  _0xdee9.loadAllTypes(coder);
  for (const m of Object.values(MODULES)) {
    coder.load(
      m as any,
      "0x47989e1f044f37b797ed052aba94874872b5dfd2d0d2afb1278f967d0d895867",
    );
  }
}

loadAllTypes(defaultMoveCoder(SuiNetwork.MAIN_NET));
